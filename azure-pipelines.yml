# Azure Pipeline for Terraform Deployment
# Author: Nigel P


trigger: none

pool: 
  vmImage: 'ubuntu-latest'

variables:
- group: TF_SERVICE_PRINCIPAL
- group: TF_BACKEND_CONFIG



stages:
  - stage: validate

    jobs:
    - job: validate
      continueOnError: false
        
      steps:
      - task: DownloadSecureFile@1
        name: tfPublicKey
        inputs:
          secureFile: 'tfkey.pub'
          socketTimeout: '30000'
          retryCount: 8

      - task: DownloadSecureFile@1
        name: tfVarsFile
        displayName: 'Download Terraform input variables file'
        inputs:
          secureFile: 'terraform.tfvars'
          socketTimeout: '30000'
          retryCount: 8

      - bash: |
          terraform init \
            -backend-config="storage_account_name=$TF_APS_STORAGE_ACCOUNT_NAME" \
            -backend-config="container_name=$TF_APS_CONTAINER_NAME" \
            -backend-config="key=$TF_APS_KEY" \
            -backend-config="access_key=$TF_ACCESS_KEY" \
            -var-file="$(tfVarsFile.secureFilePath)" \
            -var fileloc="$(tfPublicKey.secureFilePath)" \
            -var ARM_SUBSCRIPTION_ID="$TF_ARM_SUBSCRIPTION_ID" \
            -var ARM_CLIENT_ID="$TF_ARM_CLIENT_ID" \
            -var ARM_CLIENT_SECRET="$TF_ARM_CLIENT_SECRET" \
            -var ARM_TENANT_ID="$TF_ARM_TENANT_ID" 
        displayName: "Terraform Init"
        env:
            TF_APS_RESOURCE_GROUP_NAME    : $(aps-resource-group-name)
            TF_APS_CONTAINER_NAME         : $(aps-container-name)
            TF_APS_STORAGE_ACCOUNT_NAME   : $(aps-storage-account-name)
            TF_APS_KEY                    : $(aps-key)
            TF_ACCESS_KEY                 : $(aps-access-key)        
            TF_ARM_CLIENT_ID              : $(aps-arm-client-id)
            TF_ARM_CLIENT_SECRET          : $(aps-client-secret)
            TF_ARM_SUBSCRIPTION_ID        : $(aps-subscription-id)
            TF_ARM_TENANT_ID              : $(aps-tenant-id)  

      - bash: |
          terraform plan \
            -var-file="$(tfVarsFile.secureFilePath)" \
            -var fileloc="$(tfPublicKey.secureFilePath)" \
            -out=terraform.tfplan 
        displayName: 'Terraform Plan'
        env:
          ARM_CLIENT_ID              : $(aps-arm-client-id)
          ARM_CLIENT_SECRET          : $(aps-client-secret)
          ARM_SUBSCRIPTION_ID        : $(aps-subscription-id)
          ARM_TENANT_ID              : $(aps-tenant-id)

      - bash: |
          terraform apply \
            -auto-approve terraform.tfplan 
        displayName: 'Terraform Apply'
        name: 'TerraformApply'
        env:
          ARM_CLIENT_ID              : $(aps-arm-client-id)
          ARM_CLIENT_SECRET          : $(aps-client-secret)
          ARM_SUBSCRIPTION_ID        : $(aps-subscription-id)
          ARM_TENANT_ID              : $(aps-tenant-id)        

