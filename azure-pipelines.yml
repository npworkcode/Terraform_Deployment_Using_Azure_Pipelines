# Azure Pipeline for Terraform Deployment
# Author: Nigel P


trigger: none

pool: 
  vmImage: 'ubuntu-latest'

variables:
- group: TF_SERVICE_PRINCIPAL
- group: TF_BACKEND_CONFIG



stages:
  - stage: validate

    jobs:
    - job: validate
      continueOnError: false
      steps:
      - task: TerraformInstaller@0
        displayName: Install Terraform
        inputs:
          terraformVersion: 'latest'
      - task: DownloadSecureFile@1
        name: tfPublicKey
        inputs:
          secureFile: 'tfkey.pub'
          socketTimeout: '30000'
          retryCount: 8

      - task: TerraformCLI@0
        displayName: 'terraform init'
        env:
            TF_APS_RESOURCE_GROUP_NAME    : $(aps-resource-group-name)
            TF_APS_RESOURCE_CONTAINER_NAME: $(aps-container-name)
            TF_APS_STORAGE_ACCOUNT_NAME   : $(aps-storage-account-name)
            TF_APS_KEY                    : $(aps-key)
            TF_ARM_CLIENT_ID              : $(aps-arm-client-id)
            TF_ARM_CLIENT_SECRET          : $(aps-arm-client-secret)
            TF_ARM_SUBSCRIPTION_ID        : $(aps-subscription-id)
            TF_ARM_TENANT_ID               : $(aps-tenant-id)
        inputs:
          command: 'init'
          backendType: azurerm
          ensureBackend: true
          allowTelemetryCollection: true
          commandOptions:  '-var ARM_CLIENT_ID        = $TF_ARM_CLIENT_ID                                   \
                            -var ARM_CLIENT_SECRET    = $TF_ARM_CLIENT_SECRET                               \
                            -var ARM_SUBSCRIPTION_ID  = $TF_ARM_SUBSCRIPTION_ID                             \
                            -var ARM_TENANT_ID        = $TF_ARM_TENANT_ID                                   \
                            -backend-config           = "storage_account_name=$TF_APS_STORAGE_ACCOUNT_NAME" \
                            -backend-config           = "container_name=$TF_APS_RESOURCE_CONTAINER_NAME"    \
                            -backend-config           = "resource_group_name=$TF_APS_RESOURCE_GROUP_NAME"   \
                            -backend-config           = "key=$TF_APS_KEY"                                   \
                            -var fileloc              = $(tfPublicKey.secureFilePath)'

      - task: TerraformCLI@0
        displayName: 'terraform validate'
        inputs:
          command: 'validate'
          allowTelemetryCollection: true
  
  - stage: plan
    dependsOn: [validate]
    condition: succeeded('validate')
    jobs:
      - job: terraform_plan_develop
        steps:
        - task: TerraformInstaller@0
          displayName: Terraform Install
          inputs:
            terraformVersion: 'latest'

        - task: DownloadSecureFile@1
          name: tfVarsFile
          displayName: 'Download Terraform input variables file'
          inputs:
            secureFile: 'terraform.tfvars'
            socketTimeout: '30000'
            retryCount: 8

        - script: |
            echo Using $(tfVarsFile.secureFilePath) as Terraform input....

        - task: TerraformCLI@0
          displayName: 'terraform plan'
          env:
            TF_APS_RESOURCE_GROUP_NAME    : $(aps-resource-group-name)
            TF_APS_RESOURCE_CONTAINER_NAME: $(aps-container-name)
            TF_APS_STORAGE_ACCOUNT_NAME   : $(aps-storage-account-name)
            TF_APS_KEY                    : $(aps-key)
            TF_ARM_CLIENT_ID              : $(aps-arm-client-id)
            TF_ARM_CLIENT_SECRET          : $(aps-arm-client-secret)
            TF_ARM_SUBSCRIPTION_ID        : $(aps-subscription-id)
            TF_ARM_TENANT_ID              : $(aps-tenant-id)
          inputs:
            command: 'plan'
            backendType: azurerm
            ensureBackend: true
            backendAzureRmResourceGroupName:  $TF_APS_RESOURCE_GROUP_NAME
            backendAzureRmContainerName:      $TF_APS_RESOURCE_CONTAINER_NAME
            backendAzureRmStorageAccountName: $TF_APS_STORAGE_ACCOUNT_NAME
            backendAzureRmKey:                $TF_APS_KEY
            allowTelemetryCollection:         true
            commandOptions:  '-input=true                                               \
                              -out=$(System.DefaultWorkingDirectory)/terraform.tfplan   \
                              -detailed-exitcode                                        \
                              -var ARM_CLIENT_ID        = $TF_ARM_CLIENT_ID         \
                              -var ARM_CLIENT_SECRET    = $TF_ARM_CLIENT_SECRET     \
                              -var ARM_SUBSCRIPTION_ID  = $TF_ARM_SUBSCRIPTION_ID   \
                              -var ARM_TENANT_ID        = $TF_ARM_TENANT_ID         \
                              -var-file                 = $(tfVarsFile.secureFilePath)  \
                              -var fileloc              = $(tfPublicKey.secureFilePath)'
            publishPlanResults: 'terraform.tfplan'
